---
// Fase VERDE: Implementación de la Landing Page
// src/pages/index.astro (Fragmento Corregido)
import { getEntry, getCollection, type CollectionEntry } from 'astro:content'; 
import Layout from '../layouts/Layout.astro';
import { mdToHtml } from '../utils/markdown';
import PortafolioList from '../components/PortafolioList.astro'; // IMPORT MODIFICADO

// 1. Leer la fuente de verdad (Headless CMS) de forma segura
const home = await getEntry('pages', 'home');
const homeSettings = await getEntry('ajustes', 'home');

// Valores por defecto para la página
const title = home?.data.title ?? 'Elevawod - Desarrollo de Software e IA';
const description = home?.data.description ?? 'Soluciones de software e inteligencia artificial a medida.';
const hero = home?.data.hero ?? { background_image: 'https://images.unsplash.com/photo-1518770660439-4636190af475?q=80&w=2070&auto=format&fit=crop', title: 'Un socio tecnológico, no un proveedor más.', subtitle: 'Creamos soluciones de software e inteligencia artificial que se sienten cercanas, como parte de tu equipo.' };
const nosotros = home?.data.nosotros ?? { title: 'Nosotros', image: '' };
const servicios = home?.data.servicios ?? { title: 'Nuestros Servicios', lista: [] };
const clientes = home?.data.clientes ?? { title: 'Lo que dicen nuestros clientes', lista: [] };
const contacto = await getEntry('informacion-de-contacto', 'general');

// Si la página de inicio no se carga, no podemos renderizar su contenido
if (!home) {
  // Podríamos mostrar un mensaje de error o simplemente no renderizar la sección
  // Por ahora, el layout se cargará con títulos por defecto.
} 

const { Content } = home ? await home.render() : { Content: () => null };

// 2. Lectura de Proyectos Destacados de forma segura
const featuredProjectSlugs = homeSettings?.data.proyectos_destacados ?? [];

let featuredProjects: CollectionEntry<'proyectos'>[] = [];
if (featuredProjectSlugs.length > 0) {
  featuredProjects = await getCollection('proyectos', ({ slug }) => {
    return featuredProjectSlugs.includes(slug);
  });

  // Mantener el orden definido en el CMS
  featuredProjects.sort((a, b) => {
    return featuredProjectSlugs.indexOf(a.slug) - featuredProjectSlugs.indexOf(b.slug);
  });
}
---

<Layout title={title} description={description}>
  <main class="bg-secondary">
    <!-- Hero Section -->
    <header id="inicio" class="relative h-screen flex items-center justify-center text-center text-text-inverted">
      <!-- Background Image -->
      <div class="absolute top-0 left-0 w-full h-full bg-cover bg-center" style={`background-image: url('${hero.background_image}');`}></div>
      
      <!-- Overlay -->
      <div class="absolute top-0 left-0 w-full h-full bg-primary opacity-80"></div>
    
      <!-- Content -->
      <div class="relative z-10 px-8 animate-fade-in-up">
        <h1 class="text-4xl md:text-6xl font-sans font-bold mb-4">
          <span set:html={mdToHtml(hero.title)} />
        </h1>
        <p class="text-lg md:text-xl max-w-2xl mx-auto mb-8">
          <span set:html={mdToHtml(hero.subtitle)} />
        </p>
        <a href="mailto:contacto@elevawod.cl?subject=Quiero iniciar un proyecto" 
           class="bg-accent text-primary font-bold py-3 px-8 text-lg transition-transform duration-300 hover:scale-105 hover:shadow-lg"
        >Hablemos de tu idea</a>
      </div>
    </header>

    <!-- Nosotros Section -->
    <section id="nosotros" class="py-20 px-8">
      <div class="container mx-auto grid grid-cols-1 md:grid-cols-2 gap-12 items-center">
        <div class="prose prose-xl text-text-base max-w-none">
          <h2 class="font-sans text-4xl font-bold mb-4 text-primary"}>
            <span set:html={mdToHtml(nosotros.title)} />
          </h2>
          {nosotros.content ? (
            <div class="text-base leading-relaxed"}>
              <span set:html={mdToHtml(nosotros.content)} />
            </div>
          ) : (
            <Content />
          )}
        </div>
        {nosotros.image && <img src={nosotros.image} alt={`Imagen de ${nosotros.title}`} class="shadow-xl w-full h-auto object-cover transition-transform duration-300 hover:scale-105" />}
      </div>
    </section>

    <!-- Proyectos Section -->
    {featuredProjects.length > 0 && (
      <section id="proyectos" class="bg-white py-20 px-8">
        <div class="container mx-auto text-center">
          <h2 class="font-sans text-4xl font-bold mb-12 text-primary">Proyectos Destacados</h2>
          <PortafolioList projects={featuredProjects} />
        </div>
      </section>
    )}

    <!-- Servicios Section (2 columnas centradas, max 4 por columna) -->
    <section id="servicios" class="py-20 px-8">
      <div class="container mx-auto text-center">
        <h2 class="font-sans text-4xl font-bold mb-12 text-primary">{servicios.title}</h2>

        {(() => {
          const all = servicios.lista ?? [];
          // Mostrar como máximo 8 servicios (4 por columna). Si hay más, se pueden mostrar en otra sección o paginar.
          const visible = all.slice(0, 8);
          const mid = Math.ceil(visible.length / 2);
          const col1 = visible.slice(0, mid);
          const col2 = visible.slice(mid);

          return (
            <div class="flex flex-col md:flex-row justify-center gap-8">
              <div class="flex flex-col gap-8 w-full md:w-1/2 items-center">
                {col1.map(s => (
                  <div class="w-full max-w-md bg-white p-6 shadow-lg rounded-lg text-center">
                    {s.image && <img src={s.image} alt={`Imagen de ${s.title}`} class="w-full h-40 object-cover mb-4 rounded" />}
                    <h3 class="font-sans text-2xl font-bold mb-2 text-primary">
                      <span set:html={mdToHtml(s.title)} />
                    </h3>
                    <p class="text-text-base" >
                      <span set:html={mdToHtml(s.description)} />
                    </p>
                  </div>
                ))}
              </div>

              <div class="flex flex-col gap-8 w-full md:w-1/2 items-center">
                {col2.map(s => (
                  <div class="w-full max-w-md bg-white p-6 shadow-lg rounded-lg text-center">
                    {s.image && <img src={s.image} alt={`Imagen de ${s.title}`} class="w-full h-40 object-cover mb-4 rounded" />}
                    <h3 class="font-sans text-2xl font-bold mb-2 text-primary">{s.title}</h3>
                    <p class="text-text-base">{s.description}</p>
                  </div>
                ))}
              </div>
            </div>
          );
        })()}

      </div>
    </section>

    <!-- Testimonios Section -->
    <section id="clientes" class="bg-primary py-20 px-8 text-text-inverted">
      <div class="container mx-auto text-center">
        <h2 class="font-sans text-4xl font-bold mb-12">{clientes.title}</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8 text-left">
          {(clientes.lista ?? []).map(cliente => (
            <div class="bg-white/10 p-8 transition-all duration-300 hover:bg-white/20">
              {cliente.google_review_embed ? (
                <div set:html={cliente.google_review_embed} />
              ) : (
                <>
                  <p class="text-xl italic mb-4" >
                    <span set:html={mdToHtml(cliente.quote)} />
                  </p>
                  <p class="font-bold text-right">- {cliente.author}</p>
                </>
              )}
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Contacto Section -->
    <section id="contacto" class="py-20 px-8 text-center">
        <h2 class="font-sans text-4xl font-bold mb-4 text-primary">{contacto?.data.contact_heading ?? '¿Listo para empezar?'}</h2>
        <p class="text-lg max-w-2xl mx-auto mb-8">{contacto?.data.contact_subheading ?? 'Conversemos por WhatsApp para una respuesta más rápida o envíame un correo.'}</p>
        <div class="flex justify-center gap-4 flex-wrap">
            {contacto?.data.whatsapp && (
              (() => {
                const msg = encodeURIComponent(contacto.data.whatsapp_message ?? 'Hola, quiero cotizar un proyecto');
                const href = `https://wa.me/${contacto.data.whatsapp}?text=${msg}`;
                return (
                  <a href={href}
                     class="bg-[#25D366] text-white font-bold py-3 px-8 text-lg transition-transform duration-300 hover:scale-105 hover:shadow-lg"
                     target="_blank" rel="noopener noreferrer">WhatsApp</a>
                );
              })()
            )}
            {contacto?.data.email && (
              <a href={`mailto:${contacto.data.email}`} 
                 class="bg-accent text-primary font-bold py-3 px-8 text-lg transition-transform duration-300 hover:scale-105 hover:shadow-lg"
              >Correo Electrónico</a>
            )}
        </div>
					{contacto?.data.address ? <div class="mt-6 text-sm text-primary">{contacto.data.address}</div> : null}
    </section>

  </main>
</Layout>

<style>
  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in-up {
    animation: fade-in-up 1s ease-out forwards;
  }
</style>